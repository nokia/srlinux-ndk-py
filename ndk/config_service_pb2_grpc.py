# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ndk import config_service_pb2 as ndk_dot_config__service__pb2


class SdkMgrConfigServiceStub(object):
    """*
    Represents service for config operations.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AcknowledgeConfig = channel.unary_unary(
                '/srlinux.sdk.SdkMgrConfigService/AcknowledgeConfig',
                request_serializer=ndk_dot_config__service__pb2.AcknowledgeConfigRequest.SerializeToString,
                response_deserializer=ndk_dot_config__service__pb2.AcknowledgeConfigResponse.FromString,
                )


class SdkMgrConfigServiceServicer(object):
    """*
    Represents service for config operations.
    """

    def AcknowledgeConfig(self, request, context):
        """Acknowledge received configuration.
        When agent is registered with `wait_config_ack` flag set to true,
        it needs to acknowledge received configuration.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SdkMgrConfigServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AcknowledgeConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.AcknowledgeConfig,
                    request_deserializer=ndk_dot_config__service__pb2.AcknowledgeConfigRequest.FromString,
                    response_serializer=ndk_dot_config__service__pb2.AcknowledgeConfigResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'srlinux.sdk.SdkMgrConfigService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SdkMgrConfigService(object):
    """*
    Represents service for config operations.
    """

    @staticmethod
    def AcknowledgeConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/srlinux.sdk.SdkMgrConfigService/AcknowledgeConfig',
            ndk_dot_config__service__pb2.AcknowledgeConfigRequest.SerializeToString,
            ndk_dot_config__service__pb2.AcknowledgeConfigResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
